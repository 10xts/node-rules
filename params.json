{"name":"Node-rules","tagline":"Node-rules is a forward chaining Rules Engine, written on node.js.","body":"Node-rules\r\n=====\r\n\r\n## About\r\n\r\nNode-rules is a forward chaining Rules Engine, written on node.js.\r\n\r\n\r\n## Rules \r\n\r\nNode-rules takes rules written in JSON format as input. These rules get applied on the specified iputs(facts) to the rule engine.\r\n\r\nA Rules consist of \r\n\r\n1. name - the name for the rule\r\n\r\n2. conditions - a function which takes inputs and upon returning its results the rule engine executes the corresponding consequence.\r\n\r\n3. consequence - a function which gets executed accoring to the return value from a condititon after executed. \r\n\r\n4. description - the description for the rule\r\n\r\n5. priority - number which decides the order at which the rule gets applied on the supplied facts.\r\n\r\n6. on - boolean telling whether or not the rule should be considered by the rule engine.\r\n\r\n## Example rule\r\n\r\n\r\n    {\r\n\t\t\"name\": \"transaction minimum\",\r\n\t\t\"description\": \"blocks transactions below value x\",\r\n\t\t\"priority\": 3,\r\n\t\t\"on\":1,\r\n\t\t\"condition\":\r\n\t\t\tfunction(fact) {\r\n\t\t\t\treturn fact && (fact.transactionTotal < 500);\r\n\t\t\t},\r\n\t\t\"consequence\":\r\n\t\t\tfunction() {\r\n\t\t\t\tconsole.log(\"Rule 1 matched for \"+this.name+\": blocks transactions below value 500. Rejecting payment.\");\r\n\t\t\t\tthis.result = false;\r\n\t\t\t\tthis.process = true;\r\n\t\t\t}\r\n\t}\r\n\r\n\r\n## Facts\r\n\r\nFacts are those input json values on which the rule engine applies its rule to obtain results. A fact can have multiple attributes.\r\n\r\n## Example Fact\r\n\r\n\t{\r\n\t  \"userIP\": \"27.3.4.5\",\r\n\t  \"name\":\"user4\",\r\n\t  \"eventRiskFactor\":8,\r\n\t  \"userCredibility\":2,\r\n\t  \"application\":\"MOB2\",\r\n\t  \"userLoggedIn\":true,\r\n\t  \"transactionTotal\":400,\r\n\t  \"cardType\":\"Credit Card\",\r\n\t  \"cardIssuer\":\"VISA\",\r\n\t  \r\n\t}\r\n\t\r\n##Usage\r\n\r\nThe example below shows how to use the rule engine to apply a sample rule on a specific fact.\r\n\t\r\n``` js\r\n\r\nvar RuleEngine = require('node-rules');\r\n\r\nvar rules = [{\r\n\t\t\"name\": \"transaction minimum\",\r\n\t\t\"description\": \"blocks transactions below value x\",\r\n\t\t\"priority\": 3,\r\n\t\t\"on\":1,\r\n\t\t\"condition\":\r\n\t\t\tfunction(fact) {\r\n\t\t\t\treturn fact && (fact.transactionTotal < 500);\r\n\t\t\t},\r\n\t\t\"consequence\":\r\n\t\t\tfunction() {\r\n\t\t\t\tconsole.log(\"Rule 1 matched for \"+this.name+\": blocks transactions below value 500. Rejecting payment.\");\r\n\t\t\t\tthis.result = false;\r\n\t\t\t\tthis.process = true;\r\n\t\t\t}\r\n\t}];\r\n\t\r\nvar fact = {\r\n\t  \"userIP\": \"27.3.4.5\",\r\n\t  \"name\":\"user4\",\r\n\t  \"eventRiskFactor\":8,\r\n\t  \"userCredibility\":2,\r\n\t  \"application\":\"MOB2\",\r\n\t  \"userLoggedIn\":true,\r\n\t  \"transactionTotal\":400,\r\n\t  \"cardType\":\"Credit Card\",\r\n\t  \"cardIssuer\":\"VISA\",\r\n\t  \r\n\t};\r\n\t\r\nvar R = new RuleEngine(rules);\r\n\r\nR.execute(user7,function(result){ \r\n\r\n\tif(result.result) \r\n\t\tconsole.log(\"\\n-----Payment Accepted for----\\n\"); \r\n\telse \r\n\t\tconsole.log(\"\\n-----Payment Rejected for----\\n\");\r\n\t\r\n\tconsole.log(result); \r\n\t\r\n});\r\n```\r\n\r\n## Credits\r\n\r\nBoth the rules and the facts used in this module are based on the node module [jools](https://github.com/tdegrunt/jools). \r\nIts a modified version of jools with a non blocking version of applying the rule engine on the facts.\r\nThe rule engine logic was been modified sothat the rule executions on separate facts donot block each other.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}